{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"FBotics: The Python Client for Facebook Send API Overview FBotics is a Python client for Facebook Send API. The Send API is the main API used to send messages to users, including text, attachments, structured message templates, sender actions, and more. The goal of this project is to privide a clean and professional client, which can be used in production environments. For this, each new functionality added will be fully tested and documented. Currently this project is under development and offers a limited set of features of the Facebook Send API. Features FBotics currently supports sending following message types: Quick Replies Buttons Call Button Postback Button URL Button Templates Button Template Generic Template Installation You can install the latest version of FBotics using pip: pip install fbotics You can also install FBotics from GitHub source: First, clone FBotics using git : git clone git@github.com:pasmod/fbotics.git Then, cd to the project folder and run the install command: cd fbotics pip install . Development & Testing Before developing FBotics further, please install Docker. For building the Docker image and installing all dependencies of FBotics, run: cd fbotics make build Then execute the following command to run all the components required to work on FBotics: cd fbotics make up To execute the tests: make test To create coverage report: make coverage","title":"Home"},{"location":"#fbotics-the-python-client-for-facebook-send-api","text":"","title":"FBotics: The Python Client for Facebook Send API"},{"location":"#overview","text":"FBotics is a Python client for Facebook Send API. The Send API is the main API used to send messages to users, including text, attachments, structured message templates, sender actions, and more. The goal of this project is to privide a clean and professional client, which can be used in production environments. For this, each new functionality added will be fully tested and documented. Currently this project is under development and offers a limited set of features of the Facebook Send API.","title":"Overview"},{"location":"#features","text":"FBotics currently supports sending following message types: Quick Replies Buttons Call Button Postback Button URL Button Templates Button Template Generic Template","title":"Features"},{"location":"#installation","text":"You can install the latest version of FBotics using pip: pip install fbotics You can also install FBotics from GitHub source: First, clone FBotics using git : git clone git@github.com:pasmod/fbotics.git Then, cd to the project folder and run the install command: cd fbotics pip install .","title":"Installation"},{"location":"#development-testing","text":"Before developing FBotics further, please install Docker. For building the Docker image and installing all dependencies of FBotics, run: cd fbotics make build Then execute the following command to run all the components required to work on FBotics: cd fbotics make up To execute the tests: make test To create coverage report: make coverage","title":"Development &amp; Testing"},{"location":"button_template/examples/","text":"The button template allows you to send a structured message that includes text and buttons. This is an example to send Button Templates using FBotics: from fbotics.client import Client from fbotics.models.buttons import WebUrlButton , CallButton from fbotics.models.quick_reply import QuickReply client = Client ( page_access_token = PAGE_ACCESS_TOKEN ) button1 = WebUrlButton ( dict ( type = \"web_url\" , url = \"http://www.google.com\" , title = \"Get Order Status\" ) ) button2 = CallButton ( dict ( type = \"phone_number\" , payload = \"+15105551234\" , title = \"Call Me\" )) qr1 = QuickReply ( dict ( content_type = \"text\" , title = \"Yes\" , payload = \"payload1\" , image_url = \"http://i64.tinypic.com/1hothh.png\" , ) ) qr2 = QuickReply ( dict ( content_type = \"text\" , title = \"No\" , payload = \"payload2\" , image_url = \"http://i63.tinypic.com/2pqpbth.png\" , ) ) client . send_button_template ( recipient_id = RECIPIENT_ID , text = \"Hello World\" , quick_replies = [ qr1 , qr2 ], buttons = [ button1 , button2 ], )","title":"Button Template"},{"location":"buttons/buttons/","text":"Most message templates, as well as the persistent menu, support buttons that invoke different types of actions. These buttons allow you to easily offer the message recipient actions they can take in response to the template, such as opening the Messenger webview, starting a payment flow, sending a postback message to your webhook, and more. For message templates, buttons are included defined by objects in the buttons array. For the persistent menu, buttons are defined by objects in the call_to_actions array. [source] WebUrlButton fbotics . models . buttons . WebUrlButton ( type = web_url , title = None , webview_height_ratio = full , url = None ) The URL Button opens a webpage in the Messenger webview. This button can be used with the Button and Generic Templates. Arguments type : Type of button, which is web_url. title : Button title. 20 character limit. webview_height_ratio : Optional. Height of the Webview. Valid values: compact, tall, full. Defaults to full. url : This URL is opened in a mobile browser when the button is tapped. Must use HTTPS protocol if messenger_extensions is true. Examples from fbotics.models.buttons import WebUrlButton WebUrlButton ( dict ( title = \"hello\" , url = \"http://www.google.de\" )) [source] CallButton fbotics . models . buttons . CallButton ( type = phone_number , title = None , payload = None ) The call button dials a phone number when tapped. Phone number should be in the format + , e.g. +15105559999. Arguments type : Type of button, which is phone_number. title : Button title, 20 character limit. payload : Format must have \"+\" prefix followed by the country code, area code and local number. For example, +16505551234. Examples from fbotics.models.buttons import CallButton CallButton ( dict ( title = \"Call Representative\" , payload = \"+15105551234\" )) [source] PostbackButton fbotics . models . buttons . PostbackButton ( type = postback , title = None , payload = None ) The postback button sends a messaging_postbacks event to your webhook with the string set in the payload property. This allows you to take an arbitrary actions when the button is tapped. For example, you might display a list of products, then send the product ID in the postback to your webhook, where it can be used to query your database and return the product details as a structured message. Arguments type : Type of button, which is postback. title : Button title. 20 character limit. payload : This data will be sent back to your webhook. 1000 character limit. Examples from fbotics.models.buttons import PostbackButton PostbackButton ( dict ( title = \"Select Product\" , payload = \"a4f8#4k3\" ))","title":"Buttons"},{"location":"buttons/buttons/#weburlbutton","text":"fbotics . models . buttons . WebUrlButton ( type = web_url , title = None , webview_height_ratio = full , url = None ) The URL Button opens a webpage in the Messenger webview. This button can be used with the Button and Generic Templates. Arguments type : Type of button, which is web_url. title : Button title. 20 character limit. webview_height_ratio : Optional. Height of the Webview. Valid values: compact, tall, full. Defaults to full. url : This URL is opened in a mobile browser when the button is tapped. Must use HTTPS protocol if messenger_extensions is true. Examples from fbotics.models.buttons import WebUrlButton WebUrlButton ( dict ( title = \"hello\" , url = \"http://www.google.de\" )) [source]","title":"WebUrlButton"},{"location":"buttons/buttons/#callbutton","text":"fbotics . models . buttons . CallButton ( type = phone_number , title = None , payload = None ) The call button dials a phone number when tapped. Phone number should be in the format + , e.g. +15105559999. Arguments type : Type of button, which is phone_number. title : Button title, 20 character limit. payload : Format must have \"+\" prefix followed by the country code, area code and local number. For example, +16505551234. Examples from fbotics.models.buttons import CallButton CallButton ( dict ( title = \"Call Representative\" , payload = \"+15105551234\" )) [source]","title":"CallButton"},{"location":"buttons/buttons/#postbackbutton","text":"fbotics . models . buttons . PostbackButton ( type = postback , title = None , payload = None ) The postback button sends a messaging_postbacks event to your webhook with the string set in the payload property. This allows you to take an arbitrary actions when the button is tapped. For example, you might display a list of products, then send the product ID in the postback to your webhook, where it can be used to query your database and return the product details as a structured message. Arguments type : Type of button, which is postback. title : Button title. 20 character limit. payload : This data will be sent back to your webhook. 1000 character limit. Examples from fbotics.models.buttons import PostbackButton PostbackButton ( dict ( title = \"Select Product\" , payload = \"a4f8#4k3\" ))","title":"PostbackButton"},{"location":"client/client/","text":"In order to create an instance of the Client, a page access token is needed. from fbotics.client import Client client = Client ( page_access_token = \"PAGE_ACCESS_TOKEN\" ) send_button_template send_button_template ( recipient_id = None , user_ref = None , phone_number = None , text = None , quick_replies = None , buttons = None ) Sends a button template to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : optional. user_ref from the checkbox plugin phone_number : Optional. Phone number of the recipient with the format +1(212)555-2368. Your bot must be approved for Customer Matching to send messages this way. text : UTF-8-encoded text of up to 640 characters. Text will appear above the buttons. quick_replies : An array of objects the describe the quick reply buttons to send. A maximum of 11 quick replies are supported. buttons : Set of 1-3 buttons that appear as call-to-actions. send_text send_text ( recipient_id = None , user_ref = None , phone_number = None , text = None ) Sends a text message to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : Optional. user_ref from the checkbox plugin phone_number : Optional. Phone number of the recipient with the format +1(212)555-2368. Your bot must be approved for Customer Matching to send messages this way. text : must be UTF-8 and has a 2000 character limit. send_audio send_audio ( recipient_id = None , user_ref = None , phone_number = None , url = None , quick_replies = None ) Sends an audio to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : Optional. user_ref from the checkbox plugin url : URL of the audio quick_replies : An array of objects the describe the quick reply buttons to send. A maximum of 11 quick replies are supported. send_image send_image ( recipient_id = None , user_ref = None , phone_number = None , url = None , quick_replies = None ) Sends an image to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : Optional. user_ref from the checkbox plugin url : URL of the image quick_replies : An array of objects the describe the quick reply buttons to send. A maximum of 11 quick replies are supported. send_file send_file ( recipient_id = None , user_ref = None , phone_number = None , url = None , quick_replies = None ) Sends a file to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : Optional. user_ref from the checkbox plugin url : URL of the file quick_replies : An array of objects the describe the quick reply buttons to send. A maximum of 11 quick replies are supported. send_generic_template send_generic_template ( recipient_id = None , user_ref = None , phone_number = None , elements = None , quick_replies = None ) Sends a generic template to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : optional. user_ref from the checkbox plugin phone_number : Optional. Phone number of the recipient with the format +1(212)555-2368. Your bot must be approved for Customer Matching to send messages this way. elements : An array of element objects that describe instances of the generic template to be sent. Specifying multiple elements will send a horizontally scrollable carousel of templates. A maximum of 10 elements is supported. buttons : Set of 1-3 buttons that appear as call-to-actions. send_quick_replies send_quick_replies ( recipient_id = None , user_ref = None , phone_number = None , text = None , quick_replies = None ) Sends quick replies to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : Optional. user_ref from the checkbox plugin phone_number : Optional. Phone number of the recipient with the format +1(212)555-2368. Your bot must be approved for Customer Matching to send messages this way. text : must be UTF-8 and has a 2000 character limit. quick_replies : An array of objects the describe the quick reply buttons to send. A maximum of 11 quick replies are supported.","title":"Client"},{"location":"client/client/#send_button_template","text":"send_button_template ( recipient_id = None , user_ref = None , phone_number = None , text = None , quick_replies = None , buttons = None ) Sends a button template to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : optional. user_ref from the checkbox plugin phone_number : Optional. Phone number of the recipient with the format +1(212)555-2368. Your bot must be approved for Customer Matching to send messages this way. text : UTF-8-encoded text of up to 640 characters. Text will appear above the buttons. quick_replies : An array of objects the describe the quick reply buttons to send. A maximum of 11 quick replies are supported. buttons : Set of 1-3 buttons that appear as call-to-actions.","title":"send_button_template"},{"location":"client/client/#send_text","text":"send_text ( recipient_id = None , user_ref = None , phone_number = None , text = None ) Sends a text message to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : Optional. user_ref from the checkbox plugin phone_number : Optional. Phone number of the recipient with the format +1(212)555-2368. Your bot must be approved for Customer Matching to send messages this way. text : must be UTF-8 and has a 2000 character limit.","title":"send_text"},{"location":"client/client/#send_audio","text":"send_audio ( recipient_id = None , user_ref = None , phone_number = None , url = None , quick_replies = None ) Sends an audio to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : Optional. user_ref from the checkbox plugin url : URL of the audio quick_replies : An array of objects the describe the quick reply buttons to send. A maximum of 11 quick replies are supported.","title":"send_audio"},{"location":"client/client/#send_image","text":"send_image ( recipient_id = None , user_ref = None , phone_number = None , url = None , quick_replies = None ) Sends an image to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : Optional. user_ref from the checkbox plugin url : URL of the image quick_replies : An array of objects the describe the quick reply buttons to send. A maximum of 11 quick replies are supported.","title":"send_image"},{"location":"client/client/#send_file","text":"send_file ( recipient_id = None , user_ref = None , phone_number = None , url = None , quick_replies = None ) Sends a file to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : Optional. user_ref from the checkbox plugin url : URL of the file quick_replies : An array of objects the describe the quick reply buttons to send. A maximum of 11 quick replies are supported.","title":"send_file"},{"location":"client/client/#send_generic_template","text":"send_generic_template ( recipient_id = None , user_ref = None , phone_number = None , elements = None , quick_replies = None ) Sends a generic template to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : optional. user_ref from the checkbox plugin phone_number : Optional. Phone number of the recipient with the format +1(212)555-2368. Your bot must be approved for Customer Matching to send messages this way. elements : An array of element objects that describe instances of the generic template to be sent. Specifying multiple elements will send a horizontally scrollable carousel of templates. A maximum of 10 elements is supported. buttons : Set of 1-3 buttons that appear as call-to-actions.","title":"send_generic_template"},{"location":"client/client/#send_quick_replies","text":"send_quick_replies ( recipient_id = None , user_ref = None , phone_number = None , text = None , quick_replies = None ) Sends quick replies to the recipient. Arguments recipient_id : page specific id of the recipient user_ref : Optional. user_ref from the checkbox plugin phone_number : Optional. Phone number of the recipient with the format +1(212)555-2368. Your bot must be approved for Customer Matching to send messages this way. text : must be UTF-8 and has a 2000 character limit. quick_replies : An array of objects the describe the quick reply buttons to send. A maximum of 11 quick replies are supported.","title":"send_quick_replies"},{"location":"generic_template/example/","text":"This is an example to send Generic Templates using FBotics: from fbotics.client import Client from fbotics.models.buttons import WebUrlButton from fbotics.models.payloads.generic_template import ( GenericElement , ) from fbotics.models.quick_reply import QuickReply client = Client ( page_access_token = PAGE_ACCESS_TOKEN ) buttons = [ WebUrlButton ( dict ( type = \"web_url\" , url = \"http://www.google.com\" , title = \"Web URL Button\" ) ) ] ge = GenericElement ( dict ( title = \"Title1\" , image_url = \"http://i67.tinypic.com/262vb5l.jpg\" , subtitle = \"Subtitle1\" , buttons = buttons , ) ) qr1 = QuickReply ( dict ( content_type = \"text\" , title = \"Yes\" , payload = \"payload1\" , image_url = \"http://i64.tinypic.com/1hothh.png\" , ) ) qr2 = QuickReply ( dict ( content_type = \"text\" , title = \"No\" , payload = \"payload2\" , image_url = \"http://i63.tinypic.com/2pqpbth.png\" , ) ) response = client . send_generic_template ( recipient_id = RECIPIENT_ID , quick_replies = [ qr1 , qr2 ], elements = [ ge ], )","title":"Example"},{"location":"generic_template/generic_template/","text":"The generic template allows you to send a structured message that includes an image, text and buttons. A generic template with multiple templates described in the elements array will send a horizontally scrollable carousel of items, each composed of an image, text and buttons. [source] GenericTemplatePayload fbotics . models . payloads . generic_template . GenericTemplatePayload ( template_type = generic , sharable = False , elements = None ) The generic template is a simple structured message that includes a title, subtitle, image, and up to three buttons. You may also specify a default_action object that sets a URL that will be opened in the Messenger webview when the template is tapped. Arguments template_type : Value must be generic. sharable : Optional. Set to true to enable the native share button in Messenger for the template message. Defaults to false. elements : An array of element objects that describe instances of the generic template to be sent. Specifying multiple elements will send a horizontally scrollable carousel of templates. A maximum of 10 elements is supported. [source] GenericElement fbotics . models . payloads . generic_template . GenericElement ( title = None , image_url = None , subtitle = None , default_action = None , buttons = None ) The generic template supports a maximum of 10 elements per message. At least one property must be set in addition to title. Arguments title : The title to display in the template. 80 character limit. subtitle : Optional. The subtitle to display in the template. 80 character limit. image_url : Optional. The URL of the image to display in the template. default_action : Optional. The default action executed when the template is tapped. Accepts the same properties as URL button, except title. buttons : Optional. An array of buttons to append to the template. A maximum of 3 buttons per element is supported. [source] GenericDefaultAction fbotics . models . payloads . generic_template . GenericDefaultAction ( type = web_url , webview_height_ratio = full , url = None ) The default action executed when the template is tapped. Arguments type : Type of button. Must be web_url. url : This URL is opened in a mobile browser when the button is tapped. Must use HTTPS protocol if messenger_extensions is true. webview_height_ratio : Optional. Height of the Webview. Valid values: compact, tall, full. Defaults to full.","title":"Template Payload"},{"location":"generic_template/generic_template/#generictemplatepayload","text":"fbotics . models . payloads . generic_template . GenericTemplatePayload ( template_type = generic , sharable = False , elements = None ) The generic template is a simple structured message that includes a title, subtitle, image, and up to three buttons. You may also specify a default_action object that sets a URL that will be opened in the Messenger webview when the template is tapped. Arguments template_type : Value must be generic. sharable : Optional. Set to true to enable the native share button in Messenger for the template message. Defaults to false. elements : An array of element objects that describe instances of the generic template to be sent. Specifying multiple elements will send a horizontally scrollable carousel of templates. A maximum of 10 elements is supported. [source]","title":"GenericTemplatePayload"},{"location":"generic_template/generic_template/#genericelement","text":"fbotics . models . payloads . generic_template . GenericElement ( title = None , image_url = None , subtitle = None , default_action = None , buttons = None ) The generic template supports a maximum of 10 elements per message. At least one property must be set in addition to title. Arguments title : The title to display in the template. 80 character limit. subtitle : Optional. The subtitle to display in the template. 80 character limit. image_url : Optional. The URL of the image to display in the template. default_action : Optional. The default action executed when the template is tapped. Accepts the same properties as URL button, except title. buttons : Optional. An array of buttons to append to the template. A maximum of 3 buttons per element is supported. [source]","title":"GenericElement"},{"location":"generic_template/generic_template/#genericdefaultaction","text":"fbotics . models . payloads . generic_template . GenericDefaultAction ( type = web_url , webview_height_ratio = full , url = None ) The default action executed when the template is tapped. Arguments type : Type of button. Must be web_url. url : This URL is opened in a mobile browser when the button is tapped. Must use HTTPS protocol if messenger_extensions is true. webview_height_ratio : Optional. Height of the Webview. Valid values: compact, tall, full. Defaults to full.","title":"GenericDefaultAction"},{"location":"quick_replies/example/","text":"This is an example to send Quick Replies using FBotics: from fbotics.client import Client from fbotics.models.quick_reply import QuickReply client = Client ( page_access_token = PAGE_ACCESS_TOKEN ) qr1 = QuickReply ( dict ( content_type = \"text\" , title = \"Yes\" , payload = \"payload1\" , image_url = \"http://i64.tinypic.com/1hothh.png\" , ) ) qr2 = QuickReply ( dict ( content_type = \"text\" , title = \"No\" , payload = \"payload2\" , image_url = \"http://i63.tinypic.com/2pqpbth.png\" , ) ) response = client . send_quick_replies ( recipient_id = RECIPIENT_ID , text = \"hello world\" , quick_replies = [ qr1 , qr2 ] )","title":"Example"},{"location":"quick_replies/quick_replies/","text":"Quick Replies allow you to get message recipient input by sending buttons in a message. When a quick reply is tapped, the value of the button is sent in the conversation, and the Messenger Platform sends a messages event to you webhook. [source] QuickReply fbotics . models . quick_reply . QuickReply ( content_type = None , title = None , payload = None , image_url = None ) Represent a message object in a request sent to Facebook. Arguments content_type : Must be one of the following text: Sends a text button, location: Sends a button to collect the recipient's location, user_phone_number: Sends a button allowing recipient to send the phone number associated with their account.,user_email: Sends a button allowing recipient to send the email associated with their account. title : Required if content_type is 'text'. The text to display on the quick reply button. 20 character limit. payload : Required if content_type is 'text'. Custom data that will be sent back to you via the messaging_postbacks webhook event. 1000 character limit. May be set to an empty string if image_url is set. image_url : Optional. URL of image to display on the quick reply button for text quick replies. Image should be a minimum of 24px x 24px. Larger images will be automatically cropped and resized. Required if title is an empty string.","title":"Quick Reply"},{"location":"quick_replies/quick_replies/#quickreply","text":"fbotics . models . quick_reply . QuickReply ( content_type = None , title = None , payload = None , image_url = None ) Represent a message object in a request sent to Facebook. Arguments content_type : Must be one of the following text: Sends a text button, location: Sends a button to collect the recipient's location, user_phone_number: Sends a button allowing recipient to send the phone number associated with their account.,user_email: Sends a button allowing recipient to send the email associated with their account. title : Required if content_type is 'text'. The text to display on the quick reply button. 20 character limit. payload : Required if content_type is 'text'. Custom data that will be sent back to you via the messaging_postbacks webhook event. 1000 character limit. May be set to an empty string if image_url is set. image_url : Optional. URL of image to display on the quick reply button for text quick replies. Image should be a minimum of 24px x 24px. Larger images will be automatically cropped and resized. Required if title is an empty string.","title":"QuickReply"},{"location":"rich_media/example/","text":"This is an example to send rich media using FBotics: from fbotics.client import Client from fbotics.models.quick_reply import QuickReply client = Client ( page_access_token = PAGE_ACCESS_TOKEN ) qr1 = QuickReply ( dict ( content_type = \"text\" , title = \"Yes\" , payload = \"payload1\" , image_url = \"http://i64.tinypic.com/1hothh.png\" , ) ) qr2 = QuickReply ( dict ( content_type = \"text\" , title = \"No\" , payload = \"payload2\" , image_url = \"http://i63.tinypic.com/2pqpbth.png\" , ) ) response = client . send_image ( recipient_id = RECIPIENT_ID , url = \"http://i63.tinypic.com/2zfprph.png\" , quick_replies = [ qr1 , qr2 ] ) response = client . send_audio ( recipient_id = recipient_id , url = \"http://www.pacdv.com/sounds/voices/mmm-1.wav\" , quick_replies = [ qr1 , qr2 ] ) response = client . send_file ( recipient_id = recipient_id , url = \"http://www.xmlpdf.com/manualfiles/hello-world.pdf\" , quick_replies = [ qr1 , qr2 ] )","title":"Rich Media"},{"location":"text/example/","text":"This is an example to send text messages using FBotics: from fbotics.client import Client from fbotics.models.quick_reply import QuickReply client = Client ( page_access_token = PAGE_ACCESS_TOKEN ) response = client . send_text ( recipient_id = RECIPIENT_ID , text = \"hello world\" )","title":"Text Message"}]}